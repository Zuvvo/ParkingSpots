exit
continue
exit
MessagesController.current_user
ApplicationController.current_user
current_user
clear
current_user
@user
clear
current_user
Spot.all
User.all
@message
exit
exot
exoit
contniue
continue
message_url(@message)
continue
conitnue
current_user
User.all
Message.all
@message
continue
@message
@message.save!
@message.save
@message
continue
Message.new(message_params)
continue
spot.class
spot
spot = message_params[:spot]
message_params[:spot]
Message.new(body: message_params[:body], spot_id: message_params[:spot].id)
 Message.new(body: message_params[:body], spot_id: message_params[:spot].id)
Message.new
@message
message_params[:body]
message_params
msg = Message.new(message_params)
message_params
continue
@message.save
@message
params
continue
current_user
@user
params
continue
d
conitnue
params
@spot
@message
exit
conitnue
continue
params
@spot
current_user
continue
params
continue
params
@spot
exit
current_user
@message
@post
q
time_in_hours
q
next
spot.is_reserved?
q
y
job.perform_later(self)
job =SpotJob.set(wait_until: Time.now + time_in_hours.hours)
SpotJob.set(wait_until: Time.now + time_in_hours.hours)
SpotJob.perform_later(self)
SpotJob
exit
params[:id]
params[:id]]
params
spot
exit
params[:spot][:days]
p[:days]
p
clear
p
p = params[:spot]
params[:spot]
params[:spot[days]]
params
params[:days]
params
params[:days]
hours
days
q
user
q
user
q
user
q
user
q
user
q
user
q
user
q
User.last.uid
User.all
auth.uid
auth.info
auth
exit
next
user
exit
errors
errors.all
errors.types
errors
exit
next
exit
next
clear
params
exit
params
exit
next
